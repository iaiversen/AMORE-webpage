---
title: "Standardization Framework for Living Meta-Analysis on AMORE"
format:
  html:
    theme: 
      - yeti
      - styles.scss
    css: styles.scss
---

::: {.hero-section}
::: {.hero-content}
::: {.hero-title}
Standardization Framework for AMORE 
:::

::: {.hero-tagline}

Consensus built standardization framework for collaborative living meta-analysis and transparent science 

:::
:::
:::

::: {.about-tabs-container}
::: {.tab-navigation}
<button class="tab-button active" onclick="showTab('Requirements')">Our Requirements</button>
<button class="tab-button" onclick="showTab('Recommended')">Recommended Practices</button>
:::

::: {.tab-content}
::: {#Requirements .tab-pane .active}
## Mandatory Requirements
- **Update Frequency**  
Maximum 24 months between analysis updates  
  
- **Pre-registration**  
Meta-analysis must be pre-registered

- **Pre-print Publication**  
Initial results must be published on recognized pre-print server (e.g., Open Science Framework)  
  
- **Guidelines Adherence**  
Must follow PRISMA or equivalent guidelines (MOOSE, MARS)  
  
- **Data Repository**  
Meta-analysis data must be stored in recognized repository (e.g., Open Science Framework, Zenodo)  
  
- **Analysis Scripts**  
Free software scripts must be deposited in recognized repository  
  
- **Deviation Reporting**  
Supply deviation report with meta-analysis manuscript  
:::

::: {#Recommended .tab-pane}
## Recommended Practices
- **Accumulation Bias**  
Develop plan to address accumulation bias in frequentist framework
  
- **Effect Determination**  
Use Bayes factor of 10 to conclude presence/absence of effects  
  
- **Null Hypothesis**  
Create plan to evaluate evidence for null hypothesis  
  
- **Visualizations**  
Include forest plots and funnel plots
:::
:::
:::

<script>
function showTab(tabName) {
  const panes = document.querySelectorAll('.tab-pane');
  panes.forEach(pane => {
    pane.classList.remove('active');
  });
  
  const buttons = document.querySelectorAll('.tab-button');
  buttons.forEach(button => {
    button.classList.remove('active');
  });
  
  document.getElementById(tabName).classList.add('active');
  event.target.classList.add('active');
}
</script>