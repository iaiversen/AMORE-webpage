---
title: "Guide for managing AMORE website"
author: "Ingebjørg A. Iversen"
format: pdf
editor: visual
---

### List of stuff I need to add somewhere into this document:

-   If you want to add a file that you do not want to render or deploy add it to .gitignore. Also, the quarto.yml file that structures the platform has been directed to ignore files that begins with underscore \_ e.g. I have the \_recoveryfile.qmd that I use to save script before doing bigger changes so that if the new changes messes up something I can very easily retrieve the old code that did work. I also use this for the template to the project pages.
-   \_recoveryapp.R is used to test updates to app.R before publishing to shinyapp.io, once updates are complete, copy paste script to app.R, always keep backup with bigger changes.
-   3.8.1 app.R fill information

## Table of content

1.  Important information
2.  Getting started
3.  Project structure and file explanations
4.  Styling system SCSS
5.  Adding new projects
6.  website maintenance
7.  Troubleshooting

## 1. Important information

### 1.1 Introduction information

AMORE is a website created by Ingebjørg Anjadatter Iversen for the behavioral Neuroendocrinology Lab to host living meta-analysis for oxytocin research investigating biobehavioral outcomes.

This document instructs about MAINTANCE, ADDING PROJECTS, and AMORE project INFRASTRUCTURE

AMORE was built using RStudio and Quarto. Netlify deploys the webiste, and GitHub is used to host and share script. Netlify is accessing the script from the github repository for AMORE. Nettskjema is used as a medium between users and the AMORE team or the lab with different contacting forms

### 1.2 GitHub repository

Repository: AMORE-webpage

Repository URL: https://github.com/iaiversen/AMORE-webpage

Created by github account: iaiversen (Ingebjørg Anjadatter Iversen)

Collaborators: dsquintana (Daniel quintana)

#### 1.2.1 Repository License

AMORE-webpage repository has the MIT license. It gives open access. The LICENSE file is in the root folder (AMORE-webpage).

### 1.3 Github, ShinyApps.io and Netlify

Three platforms work together:

**GitHub (Version Control & Collaboration)**

Repository: iaiversen/AMORE-webpage Stores all source code Tracks changes with commit history Enables collaboration through pull requests Important: Never commit sensitive data (API keys, passwords)

**ShinyApps.io (Shiny App Hosting)**

Hosts the Living Meta-Analysis directory (app.R) Free tier limitations: limited active hours, connection timeouts URL: https://meta-oxytocin.shinyapps.io/shiny-meta/ Embedded in Living_meta-analysis_Directory.qmd via iframe

**Netlify (Website Hosting)**

Automatically deploys from GitHub Builds site from \_site folder after Quarto render Domain: amore-project.org Configuration in netlify.toml

**Deployment workflow:**

Make changes locally in RStudio. Test by rendering (quarto render or Render button) Commit and push to GitHub. Netlify automatically rebuilds and deploys. For Shiny app: Deploy separately using rsconnect::deployApp() or push publish button in the right top corner of the terminal.

#### 1.3.1 Netlify login and important

two-step authenticator

#### 1.3.2 Shinyapp.io login and important

### 1.4 RStudio and Quarto

RStudio is your primary development environment. Install:

R (version 4.0.0+) from CRAN RStudio Desktop from Posit Quarto CLI - Usually bundled with RStudio, or install from quarto.org

#### 1.4.1 The Different Languages

The AMORE website is built using multiple programming languages and frameworks that work together: Quarto is multilingual, Just specify in the code chunk what language is used.

The languages used:

-   Quarto Markdown (.qmd): Primary content files for pages

-   SCSS/CSS: Styling and responsive design

-   JavaScript: Interactive functionality and client-side behavior

-   R: Shiny app backend, data processing, and setup scripts

-   HTML: Embedded within Quarto files for custom components Shell scripts: Deployment and automation tasks

### 1.5 Nettskjema

Ediorial right for nettskjema forms:

-   ingebjai\@uio.no

-   danielqu\@uio.no

The users reach out to the AMORE team through Nettskjema. They find the nettskjema through links on the AMORE website.

The nettskjema forms are:

1.  Contact form AMORE

    -   First form users get to.

    -   Redirects to the other three forms

2.  Propose your project

3.  General inquiry

4.  Update an existing living meta-analysis

Emails of responses to any of these forms goes to:

-   ingebjai\@student.sv.uio.no

-   daniel.quintana\@psykologi.no

    -   Dan streamlines the response to the relevant people for evaluation of project or getting in contact with the right people. (Rest of AMORE team).

#### 1.5.1 What if this contact system needs change?

Vis et Nettskjema på en nettside (embedding) - Universitetet i Oslo

## 2. Getting started

### 2.1 Prerequisites

-   R (Version 4.0.0 or higher) - programming language

-   Rstudio - Integrated Development Environment (IDE) for R.

-   Quarto - Document publishing system for creating websites or reports

-   Github account

### 2.1 Git Clone

**First time setup:**

bash or Windows powershell

```{bash}
#| label: git-clone
#| eval: false
#| echo: true 

# In powershell or bash terminal/command line:
cd ~/Documents  # or your preferred location
git clone https://github.com/iaiversen/AMORE-webpage.git
cd AMORE-webpage
```

**In RStudio:**

1.  File → New Project → Version Control → Git

2.  Repository URL: `https://github.com/iaiversen/AMORE-webpage.git`

3.  Choose directory location

4.  Create Project

### 2.2 Dependencies

**Install all required packages:**

Open `Setup.R` and run the entire script.

```{r}
#| label: Setup script for dependencies 
#| direction: copy paste into r console 
#| eval: false 
#| echo: true 

source("Setup.R")
```

The setup.R script installs:

**Core packages:**

-   `rmarkdown`, `knitr`, `quarto` - Document rendering

-   `shiny`, `rsconnect` - Shiny app deployment

-   `DT`, `yaml`, `fs`, `httr`, `jsonlite` - Data handling

-   `bslib`, `sass` - Styling

-   `tinytex` - LaTeX/PDF support

**The script handles:**

-   Checking if packages are already installed

-   Installing missing packages

-   Loading libraries

-   Setting up TinyTeX distribution2.3 Verify Installation

**Test that everything works:**

```{r}
#| label: Verify installation in r console 
#| eval: false 
#| echo: true 

("quarto --version") # Check Quarto system
quarto::quarto_render("index.qmd") # Test rendering a single page 
source("Setup.R") sync_styles() # Test sync_styles function
```

## 3. Project structure and file explanations

```{bash}
#| label: Root folder (AMORE-webpage) and the file structure
#| eval: false
#| echo: true 

AMORE-webpage/
├── index.qmd                          # Homepage (root level)
├── _quarto.yml                        # Main configuration file
├── LICENSE
├── README.md
├── .gitignore
├── .node-version
├── package.json
├── netlify.toml                       # Netlify deployment config
├── netlify-setup-quarto.sh            # Quarto setup for Netlify
├── install-quarto.sh                  # Quarto installation script
├── AMORE.Rproj                        # RStudio project file
│
├── .quarto/                           # Quarto build cache (auto-generated)
│   ├── idx/                           # Index files
│   ├── xref/                          # Cross-references
│   ├── listing/
│   ├── preview/
│   └── _freeze/
│
├── assets/
│   ├── favicons/                      # All favicon files
│   │   ├── favicon.ico
│   │   ├── apple-touch-icon.png
│   │   ├── favicon-96x96.png
│   │   ├── site.webmanifest
│   │   └── amore.favicon.ico
│   │
│   ├── images/                        # Logo and visual assets
│   │   ├── logo.unfinished_nowhite- Copy.png
│   │   ├── LiMAs.jpg
│   │   └── [other image files]
│   │
│   └── styles/
│       └── styles.scss                # Main stylesheet
│
├── pages/                             # All content pages
│   ├── about.qmd
│   ├── contact.qmd
│   ├── guidelines.qmd
│   ├── Living_meta-analysis_Directory.qmd
│   ├── Protocol_checklist.qmd
│   ├── Resources.qmd
│   └── Standardization.qmd
│
├── LMAs/                              # Living Meta-Analysis projects
│   ├── _lma-template.qmd              # Template for new LMAs
│   ├── Kang_non-social_executive_function.qmd
│   └── moxnes_perinatal_oxytocin.qmd
│
├── docs/                              # Documentation (working files)
│   ├── _AMORE_Guide.qmd               # Website management guide
│   ├── _recoveryfile.app.qmd
│   └── _recoveryfile.qmd
│
├── scripts/                           # Utility scripts
│   └── Setup.R                        # R dependencies installer
│
├── shiny-meta/                        # Shiny application
│   ├── app.R                          # Main Shiny app
│   ├── deploy.R                       # Deployment script
│   ├── README.md                      # Shiny app documentation
│   │
│   ├── rsconnect/                     # Shiny deployment config
│   │   └── shinyapps.io/
│   │       └── meta-oxytocin/
│   │           └── shiny-meta.dcf
│   │
│   └── www/                           # Shiny app assets
│       └── amore.favicon.ico
│
└── _site/                             # Generated website (DO NOT EDIT)
    ├── index.html
    ├── search.json
    ├── assets/
    ├── pages/
    ├── LMAs/
    ├── shiny-meta/
    └── site_libs/
```

### 3.1 Root files

Root files are located directly in the `AMORE-webpage/` folder. These files control the fundamental behavior, configuration, and metadata of the entire website project. They define how the site is built, deployed, and maintained.

**Key characteristics of root files:**

-   Control project-wide settings and behavior

-   Required for the website to function properly

-   Should be modified carefully as changes affect the entire site

-   Most are configuration or metadata files (not content)

#### **3.1.1 index.qmd**

The homepage of the AMORE website. This is the first page visitors see when they navigate to <https://amore-project.org>.

**Type:** Quarto markdown document (content file)

**CSS classes used directly in index.qmd:**

-   `.content-section` - Main container with transparent background on gradient

-   `.header-logo` - Logo image styling (centering, max-width)

-   `.subtitle-text` - Centered white subtitle text with specific font size

-   `.primary-button` - Call-to-action button styling

-   `.contact-buttons` - Button container for centering

-   `.BNL-text` - Text styling for lab attribution

**Global styles that also affect this page:**

-   `body` - Gradient animated background (visible behind `.content-section`)

-   Typography rules (`p`, `a`, headings)

-   `.primary-button:hover` - Hover effects on the CTA button

-   Responsive breakpoints that adjust layout on mobile/tablet

#### **3.1.2 \_quarto.yml**

The main configuration file that controls how the entire website is built and structured.

**Type:** YAML configuration file

**Important notes:**

-   Changes here affect the **entire site**

-   Always test after editing with `quarto preview`

-   Incorrect YAML indentation will break the site

-   Navbar order controls menu item order

#### **3.1.3 LICENSE**

Defines the legal terms under which the AMORE website code and content can be used, modified, and distributed.

**Type:** Plain text legal document

**License**: MIT open source license. [MIT license explanations](https://tlo.mit.edu/understand-ip/exploring-mit-open-source-license-comprehensive-guide).

#### **3.1.1.4 README.md**

Brief description of the AMORE website project displayed on the GitHub repository page.

**Type:** Markdown document

**Purpose:**

-   First thing people see on GitHub

-   Explains what the project is

#### **3.1.5 .gitignore**

**Purpose:** Tells Git which files and folders to ignore (not track or upload to GitHub).

**Type:** Plain text configuration file

**Purpose:**

-   Keeps repository clean

-   Prevents uploading generated/temporary files

-   Reduces repository size

-   Protects sensitive information

```{r}
#| label: .gitignore contents
#| eval: false
#| echo: true

# R files
*.log
*.tex
*.aux
.Rproj.user
.Rproj.user/
.Rhistory
.RData
.Ruserdata
*.Rproj

# Quarto and website specific files
_site/
/.quarto/
*_cache/
*.bak
*_error.scss
*.backup
*.ipynb
/_site/
/_freeze/
/_book/
/*_files/

# Generated HTML files in SOURCE directories (not _site)
/*.html
/pages/*.html
/LMAs/*.html
/docs/*.html

# Generated dependency folders in SOURCE directories
/*_files/
/pages/*_files/
/LMAs/*_files/
/docs/*_files/



# OS files
.DS_Store
Thumbs.db

# Test files

docs/_recoveryfile.qmd
docs/_recoveryfile.app.qmd

# Generated files
_quarto_internal_scss_error.scss

# Backup files
*.backup
*.bak
```

**Why exclude these:**

-   RStudio files are user-specific

-   \_site/ is generated, not source code

-   Cache files speed up local rendering but aren't needed in repo

-   Reduces repository size

**Never add to .gitignore:**

-   Source files (.qmd, .R, .scss)

-   Configuration files (\_quarto.yml, netlify.toml)

-   Assets (images, logos)

#### **3.1.6 .node-version**

Specifies which Node.js version to use for building the website.

**Type:** Plain text version file

**Purpose:**

-   Ensures consistent Node.js version across environments

-   Used by Netlify during deployment

-   Prevents version compatibility issues

**Current content:**

-   Single line with Node.js version number (e.g., "16")

**When to edit:**

-   Updating Node.js requirements

-   Fixing deployment issues related to Node.js version

-   Usually leave unchanged unless necessary

#### 3.1.7 Package.json

Defines npm scripts and Node.js dependencies for building and deploying the website.

**Type:** JSON configuration file

**Purpose:**

-   Contains build scripts for Netlify automated deployment

-   Manages project metadata

-   Defines commands to install Quarto and render the site

**Key sections:**

-   `name:` - Project identifier "amore-project"

-   `version:` - Project version number

-   `scripts:` - Build commands

    -   `prebuild` - Installs Quarto before building

    -   `build` - Renders the Quarto site

#### 3.1.8 netlify.toml

Configuration file for Netlify deployment settings.

**Type:** TOML configuration file

**Purpose:**

-   Tells Netlify how to build and deploy the website

-   Specifies build commands and output directory

-   Sets environment variables

**Key settings:**

-   `publish = "_site"` - Where built files are located

-   `command = "npm run build"` - Build command to execute

-   `NODE_VERSION = "16"` - Node.js version for building

#### 3.1.9 netlify-setup-quarto.sh

Bash script that installs Quarto on Netlify's build servers.

**Type:** Shell script (`.sh`)

**Purpose:**

-   Downloads and installs specific Quarto version

-   Runs during Netlify build process

-   Ensures Quarto is available for rendering

**Key actions:**

-   Downloads Quarto v1.3.450 tarball

-   Extracts and installs to `~/.local/quarto`

-   Creates symbolic link to binary

-   Verifies installation

**Version note:**

-   Script uses v1.3.450 for Netlify deployment

-   Local development can use newer Quarto versions

-   Version mismatch did not cause issued for myself, but if rendering issues, perhaps look into this

**Important:**

-   Called by `package.json` prebuild script

-   Must be executable (`chmod +x`)

#### **3.1.10 install-quarto.sh**

Bash script that installs Quarto locally (alternative installation method).

**Type:** Shell script (`.sh`)

**Purpose:**

-   Downloads and installs Quarto v1.6.40

-   For local development setup

-   Installs to user's home directory

**Key actions:**

-   Downloads Quarto tarball from GitHub

-   Extracts to `$HOME/.local/bin`., a temporary cache directory created during local Quarto installation. The \$HOME directory is safe to delete.

    **Type:** System directory

-   Adds to PATH

-   Verifies installation with `quarto --version`

**When to use:**

-   Setting up development environment

-   Alternative to downloading from Quarto website

-   Linux/Unix systems

**When to edit:**

-   Updating to newer Quarto version

**Note:**

-   Different version than `netlify-setup-quarto.sh`

-   Not used in deployment (local only)

### 3.2.quarto/ folder

Quarto's build cache and internal processing files (auto-generated).

**Type:** System cache directory

**Purpose:**

-   Stores rendering cache for faster builds

-   Contains cross-reference indexes

-   Holds frozen computation results

-   Internal Quarto processing files

**Structure:**

**Important notes:**

-   Auto-generated - recreated on each render

-   Already excluded in `.gitignore`

-   **NB!** Never edit manually

-   Safe to delete if troubleshooting build issues

-   Speeds up subsequent renders

**When to delete:**

-   Fixing strange rendering errors

-   Clearing cache after major changes

-   Will be recreated automatically on next `quarto render`

### 3.3 assets/ folder

Contains all static files used across the website (images, styles, icons).

Seperated into three subfolders:

-   **favicorns**

    -   Contains all browser icons and Progressive Web App (PWA) assets.

    -   Utilized in \_quarto.yml file

-   **images**

    -   all images across the website are saved in this folder

-   **styles**

    -   Contains the styles.scss sheet that instructs the rendering process of design rules for the website

### 3.4 pages/ folder

Contains all main content pages of the website (except homepage).

**Type:** Content directory

**Purpose:**

-   Houses all `.qmd` files for site pages

-   Each file = one webpage

-   Linked from navbar in `_quarto.yml`

**Files:**

-   `about.qmd` - About AMORE, mission, team, steering committee

-   `contact.qmd` - Contact form links

-   `guidelines.qmd` - Step-by-step workflow for publishing LMAs

-   `Living_meta-analysis_Directory.qmd` - Embedded Shiny app directory

-   `Protocol_checklist.qmd` - Interactive checklist tool

-   `Resources.qmd` - External resources and tools

-   `Standardization.qmd` - AMORE framework requirements

### **3.5 LMAs/ folder**

Contains all Living Meta-Analysis project pages.

**Type:** Content directory (project pages)

**Purpose:**

-   Individual `.qmd` file for each LMA project

-   Template file for creating new projects

-   Fetched by Shiny app for directory listing

**YAML metadata structure:** Each project file contains metadata that the Shiny app reads:

**Important notes:**

-   Shiny app reads these files via GitHub API

-   Metadata must follow template structure

-   Files starting with `_` are excluded from rendering

### **3.6 docs/ folder**

Contains internal documentation and working files (not published to website).

**Type:** Documentation directory

**Purpose:**

-   Working documents for website management

-   Draft files and recovery backups

-   Internal guides and notes

**Files:**

-   `_AMORE_Guide.qmd` - Website management guide (this document)

-   `_recoveryfile.qmd` - Backup/recovery file

-   `_recoveryfile.app.qmd` - Backup/recovery file

**Important notes:**

-   Files starting with `_` are **not rendered** to website

-   Already excluded in `.gitignore` (for `.html` versions)

-   For internal use only

-   Not linked in navbar

-   Safe to add more documentation files here

**When to use:**

-   Creating internal documentation

-   Draft content before moving to pages/

-   Testing new features

-   Reference materials for maintainers

### **3.7 scripts/ folder**

Contains utility scripts for project setup and maintenance.

**Type:** Utility scripts directory

**Purpose:**

-   Automate setup tasks

-   Maintenance scripts

-   Helper utilities

**Files:**

-   `Setup.R` - Installs all required R packages and dependencies

**Key functions in Setup.R:**

-   Installs R packages (rmarkdown, knitr, shiny, quarto, etc.)

-   Installs TinyTeX for PDF generation

-   Checks for existing installations before installing

-   Loads required libraries

### **3.8 shiny-meta/ folder**

Contains the Shiny application for the Living Meta-Analysis Directory.

**Type:** Shiny app directory

**Purpose:**

-   Interactive searchable directory of all LMA projects

-   Fetches project data from GitHub

-   Filters and displays LMA metadata

-   Deployed on shinyapps.io

**Structure:**

```{bash}
#| label: shiny-meta directory 
#| eval: false
#| echo: true 

shiny-meta/
├── app.R           # Main Shiny application code
├── deploy.R        # Deployment script for shinyapps.io
├── README.md       # Shiny app documentation
├── rsconnect/      # Deployment configuration
└── www/            # Static assets (favicon)
```

**Key files:**

-   `app.R` - Complete UI and server logic

-   `deploy.R` - Contains shinyapps.io account credentials

-   `rsconnect/` - Auto-generated deployment settings

**How it works:**

1.  app.R fetches `.qmd` files from `LMAs/` folder via GitHub API

2.  Extracts YAML metadata from each project

3.  Provides filtering by outcomes, population, methodology

4.  Displays paginated results with links to project pages

**Deployment:**

-   Hosted at: <https://meta-oxytocin.shinyapps.io/shiny-meta/>

-   Non-paid server at shinyapps.io, paid server will improve page loading

-   Embedded in: `pages/Living_meta-analysis_Directory.qmd`

**Important notes:**

-   Updates automatically when new LMA files added to GitHub

-   Requires shinyapps.io account for deployment

-   `deploy.R` contains sensitive credentials (not for public sharing)

#### 3.8.1 app.R

-   filter logic

### **3.9 \_site/ folder**

Contains the generated/rendered website files (auto-generated, do not edit).

**Type:** Build output directory

**Purpose:**

-   Final HTML files ready for deployment

-   Compiled CSS and JavaScript

-   Copied assets and resources

-   Generated during build process

**Structure:**

```{bash}
#| label: _site directory 
#| eval: false
#| echo: true 

_site/
├── index.html          # Rendered homepage
├── search.json         # Search index
├── assets/             # Copied assets
├── pages/              # Rendered page HTML files
├── LMAs/               # Rendered LMA project pages
├── shiny-meta/         # Copied Shiny app files
└── site_libs/          # Quarto dependencies (Bootstrap, JS)

```

**Important notes:**

-   **Auto-generated** - recreated on every `quarto render`

-   **Never edit files here** - changes will be overwritten

-   Already excluded from Git (in `.gitignore`)

**Two separate build processes:**

**Local build (your computer):**

-   Purpose: Preview and test changes

-   Command: `quarto preview` or `quarto render`

-   Creates: `_site/` folder locally

-   Result: For testing only, not deployed

**Netlify build (production):**

-   Purpose: Deploy live website

-   Triggered: Automatically on GitHub push

-   Process: Netlify clones repo → runs `npm run build` → generates fresh `_site/`

-   Result: This is what visitors see at amore-project.org

## 4. Styling system SCSS

### **4.1 Overview**

The AMORE website uses SCSS (Sassy CSS) for styling, which provides more power and flexibility than regular CSS. The main stylesheet is located at `assets/styles/styles.scss`. This file is automatically compiled to CSS when you render the Quarto site.

[Here you find scss rules](https://sass-lang.com/documentation/style-rules/)

**What styles.scss controls:**

-   Global variables (colors, fonts)

-   Typography system

-   Layout components (hero sections, grids, cards)

-   Navigation and footer

-   Interactive elements (tabs, filters, buttons)

-   Page-specific styles (index, contact, project pages)

-   Responsive breakpoints (mobile, tablet, desktop). This means the layout adjusts to different screen sizes.

-   Animations (gradient shifts, hover effects)

**Linked in:**

-   `_quarto.yml` under `theme:` and `css:`

-   Applied to all pages automatically

**Important notes:**

-   Changes affect **entire website**

-   Test thoroughly after edits and before commiting

-   Uses SCSS features (variables, nesting)

-   Compiled during `quarto render`

**File Paths in SCSS**

When referencing images or other files in your SCSS, understanding file paths is crucial:

```{SCSS}


/* CORRECT - Goes up one folder level from assets/styles/ to assets/ */
background-image: url('../images/logo.png');

/* INCORRECT - Would look in assets/styles/images/ */
background-image: url('images/logo.png');
```

### Structure of styles.scss

The file is organized into logical sections marked with comments:

1.  **Global Variables** - Colors, fonts, and sizing used throughout

2.  **Body & Animations** - Background effects and page-level styling

3.  **Typography** - All text styling (headings, paragraphs, links)

4.  **Components** - Reusable pieces (buttons, cards, navigation)

5.  **Page-Specific** - Styles for particular pages (contact, about, etc.)

6.  **Responsive Design** - Adjustments for different screen sizes

## 5. Adding new projects

-   Use the \_lma-template.qmd to add new project.

-   copy the qmd file, name new file name relevant for project

-   fill information to .qmd file

Just for me:

-   what needs to be included and what can be skipped in the project .qmd files. How can you customize it?

-   add this information in LMA template AND in this guide = Write null in the YAML metadata if not applicable (e.g. if no oxytocin assessment, write null in that entry). Need to explain the filter categories and how they work and the nettskjema where teams delivers the filter information.

-   Needs to improve the LMA template for the improvements done. Need to explain the app.R better.

-    Need

### 5.1 Using template to fill in project information

#### YAML section

```{r}
#| label: YAML section for new projects  
#| eval: false 
#| echo: true 

oxytocin:
  route: null           # ← Won't show
  dosage: NA            # ← Won't show  
  assessment_method:    # ← Empty/missing, won't show
```

```{r}
#| label: YAML section for new projects  
#| eval: false 
#| echo: true 

# # Hashtags shows the options available matched with the filter logic of app.R, if you want to add new options, this must be inlcuded in the app.R script. 

# When researcher groups propose new projects through nettskjema "Propose your project" form, they are instructed to VOLUNTARY choose metadata options for their project to increase their visibility. If they choose not to answer this part of the form leave the sections blank.  

---
title: "Write title here" 
analytical_framework: "Frequentist" # Options: Frequentist, Bayesian, Mixed Methods
oxytocin:
  intervention: "Intranasal oxytocin administration" # Options: Intranasal oxytocin administration, Peripheral oxytocin intervention (Intravenous/injection), Environmental/behavioral oxytocin manipulation, Perinatal oxytocin exposure
  assessment_method: "Behavioral assessment" # Options: Biological sample collection, Behavioral assessment, Physiological response, Genetic studies, Neural/imaging measurement
  route: "Central" # Options: Central, Peripheral, Various administration routes, Administration method unspecified
  dosage: "24 IU" # Options: 8 IU, 16 IU, 24 IU, 32 IU, 40 IU, Variable dosage
population:
  status: "Healthy" # Options: Healthy, Clinical, Mixed
  age_group: "Adults" # Options: Children, Adolescents, Adults, Older Adults, Mixed Age Groups
  clinical_type: null # If applicable for clinical populations
outcomes:
  biological:
    - "Cardiovascular" # Heart rate, blood pressure, HRV (maps to "Cardiovascular measures")
  psychological_behavioral:
    - "Social Cognition" # Theory of mind, empathy, emotion recognition (maps to "Social behavior")
    - "Trust & Cooperation" # Economic games, interpersonal trust (maps to "Trust behavior")
  clinical:
    - "Autism" # ASD symptoms, social communication (maps to "Autism")
update-frequency: "12 months" # Options: 3 months, 6 months, 12 months, 18 months, 24 months
dois:
  preregistration: "10.XXXX/template-prereg"
  preprint: "10.XXXX/template-preprint"
  publication: "10.XXXX/template-publication"    -
format:
  html:
    page-layout: full
    toc: true
    toc-title: "On this page"
    toc-location: right
    toc-depth: 3
---
```

#### Title and information panel

```{r}
#| label: information box  
#| eval: false 
#| echo: true 


# This code chunk is the title and the information box visible under the project hero title. 

# If author has multiple affiliations seperate by | symbol. 


::: {.project-hero-section}
::: {.project-hero-content}
::: {.project-hero-title}
Write title here 
:::
:::
:::

::: {.project-info-panel}
::: {.project-info-grid}

::: {.info-card .authors-card}
### Authors
<div id="author-list">
  <div id="visible-authors">
    <strong>[First Author Name]</strong> ([Affiliation])<br>
    <strong>[Second Author Name]</strong> ([Affiliation])<br>
    <strong>[Senior Author Name]</strong> ([Affiliation])
  </div>
  
  <div id="hidden-authors" style="display:none"> 
    <strong>[Fourth Author]</strong> ([Affiliation])<br>
    <strong>[Fifth Author]</strong> ([Affiliation])<br>
    <strong>[Sixth Author]</strong> ([Affiliation])<br>
    <strong>[Seventh Author]</strong> ([Affiliation])<br>
    <strong>[Eighth Author]</strong> ([Multiple Affiliations | Separated by Pipes])<br>
    <strong>[Additional Authors as needed...]</strong><br>
  </div>
  
  <a href="#" id="author-toggle" class="toggle-link" onclick="toggleAuthors(); return false;">+ Show more authors</a>
  
  <script>
  function toggleAuthors() {
    var hiddenAuthors = document.getElementById("hidden-authors");
    var toggleButton = document.getElementById("author-toggle");
    
    if (hiddenAuthors.style.display === "none") {
      hiddenAuthors.style.display = "block";
      toggleButton.textContent = "- Show fewer authors";
    } else {
      hiddenAuthors.style.display = "none";
      toggleButton.textContent = "+ Show more authors";
    }
  }
  </script>
</div>
:::

::: {.info-card .timeline-card}
### Timeline
**Pre-registered:** [Month DD, YYYY]  
**Last update:** [Status of current analysis]  
**Next update:** [Planned date or "To be determined" (XX-month update cycle)]
:::

::: {.info-card .identifiers-card}
### Identifiers
**DOI:** [https://doi.org/ACTUAL_DOI](https://doi.org/ACTUAL_DOI)

**Keywords:** [keyword1], [keyword2], [keyword3], [methodology], [population]
:::

::: {.info-card .contact-card}
### Contact
**Principal Investigator:** [PI Full Name]  
**Email:** [pi.email@institution.edu](mailto:pi.email@institution.edu)
:::

:::
:::
```

#### Main content area

```{r}
#| label: Abstract section of main content area 
#| eval: false 
#| echo: true 

## Abstract {#abstract}

This living meta-analysis investigates the relationship between [INTERVENTION DESCRIPTION] and [OUTCOME MEASURES] in [TARGET POPULATION]. [Brief background on why this research question is important and relevant statistics about prevalence or current practices].

The analysis employs a [frequentist/bayesian/mixed methods] approach, utilizing [specific statistical methods] to synthesize findings across the literature. The project addresses whether [SPECIFIC RESEARCH QUESTION]. This living meta-analysis will be updated every [XX] months, ensuring the incorporation of emerging evidence.

```

```{r}
#| label: Current results section of main content area 
#| eval: false 
#| echo: true 


## Current Results {#current-results}

<body>
    <div class="current-results-container">
        <div class="preregistered-notice">
            <p><strong>This is a pre-registered protocol.</strong> Initial analysis has not yet been conducted. Results will be posted when the analysis is completed and the pre-print is published.</p>
            
            <p>This living meta-analysis will provide updated evidence on [RESEARCH TOPIC] incorporating the latest research findings as they become available.</p>
        </div>

        <div class="previous-research">
            <div class="previous-research-title">Previous Research Context</div>
            <div class="previous-research-content">
                A previous meta-analysis by [Author et al. (YEAR)] concluded that [summary of previous findings]. This living meta-analysis will update those findings with new research and provide ongoing evidence synthesis.
            </div>
        </div>
    </div>
</body>
</html>

```

```{r}
#| label: Resources section of main content area 
#| eval: false 
#| echo: true 


## Resources {#resources}

<body>
    <div class="resources-container">
        <div class="tab-navigation">
            <button class="tab-button active" onclick="switchTab('initial')">Initial Publication</button>
            <button class="tab-button" onclick="switchTab('update1')">Update 1</button>
            <button class="tab-button" onclick="switchTab('update2')">Update 2</button>
        </div>

        <div id="initial" class="tab-content active">
            <div class="timeline-indicator">
                <div class="status-badge status-preregistered">Preregistered</div>
                <span>[Registration Date]</span>
            </div>

            <div class="resource-category">
                <div class="category-header">
                    <svg class="category-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                    </svg>
                    <h3 class="category-title">Protocol & Publication</h3>
                </div>

                <div class="resource-item">
                    <div class="resource-header">
                        <div class="resource-info">
                            <div class="resource-title">Study Protocol</div>
                            <div class="resource-description">Pre-registered analysis plan and methodology</div>
                            <div class="resource-links">
                                <a href="[ACTUAL PREREGISTRATION URL]" class="resource-link" target="_blank">
                                    <div class="link-title">Pre-registration on [Platform]</div>
                                    <div class="link-url">[URL identifier]</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="resource-item">
                    <div class="resource-header">
                        <div class="resource-info">
                            <div class="resource-title">Published Article</div>
                            <div class="resource-description">Peer-reviewed publication [journal name]</div>
                            <div class="resource-links">
                                <a href="#" class="resource-link pending" target="_blank">
                                    <div class="link-title">Published Article (Pending)</div>
                                    <div class="link-url">DOI will be assigned upon publication</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="resource-category">
                <div class="category-header">
                    <svg class="category-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 7v10c0 2.21 3.589 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.589 4 8 4s8-1.79 8-4M4 7c0-2.21 3.589-4 8-4s8 1.79 8 4"></path>
                    </svg>
                    <h3 class="category-title">Data & Analysis</h3>
                </div>

                <div class="resource-item">
                    <div class="resource-header">
                        <div class="resource-info">
                            <div class="resource-title">Complete Dataset & Scripts</div>
                            <div class="resource-description">Raw data, processed data, and analysis scripts</div>
                            <div class="resource-links">
                                <a href="#" class="resource-link pending" target="_blank">
                                    <div class="link-title">Complete Dataset (Pending)</div>
                                    <div class="link-url">Will be available upon analysis completion</div>
                                </a>
                                <a href="#" class="resource-link pending" target="_blank">
                                    <div class="link-title">Analysis Scripts (Pending)</div>
                                    <div class="link-url">Will be available upon analysis completion</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="resource-item">
                    <div class="resource-header">
                        <div class="resource-info">
                            <div class="resource-title">Protocol Documentation</div>
                            <div class="resource-description">PRISMA checklist and deviation reports</div>
                            <div class="resource-links">
                                <a href="#" class="resource-link pending" target="_blank">
                                    <div class="link-title">PRISMA Checklist (Pending)</div>
                                    <div class="link-url">Will be available upon publication</div>
                                </a>
                                <a href="#" class="resource-link pending" target="_blank">
                                    <div class="link-title">Deviation Report (Pending)</div>
                                    <div class="link-url">Will document any protocol changes</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="resource-category">
                <div class="category-header">
                    <svg class="category-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
                    </svg>
                    <h3 class="category-title">Related Research</h3>
                </div>

                <div class="resource-item">
                    <div class="resource-header">
                        <div class="resource-info">
                            <div class="resource-title">Theoretical Background</div>
                            <div class="resource-description">Key theoretical papers informing this meta-analysis</div>
                            <div class="resource-links">
                                <a href="[RELATED STUDY 1 URL]" class="resource-link" target="_blank">
                                    <div class="link-title">[Author et al. (YEAR)] - [Brief description]</div>
                                    <div class="link-doi">DOI: [DOI if available]</div>
                                </a>
                                <a href="[RELATED STUDY 2 URL]" class="resource-link" target="_blank">
                                    <div class="link-title">[Author et al. (YEAR)] - [Brief description]</div>
                                    <div class="link-doi">DOI: [DOI if available]</div>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="update1" class="tab-content">
            <div class="coming-soon-notice">
                <strong>Update 1 Coming Soon</strong> • Expected: [XX] months after initial publication
            </div>

            <div class="timeline-indicator">
                <div class="status-badge status-coming-soon">In Development</div>
                <span>Next update scheduled</span>
            </div>
        </div>

        <div id="update2" class="tab-content">
            <div class="future-notice">
                <strong>Future Update</strong> • Expected: [XX] months after Update 1
            </div>

            <div class="timeline-indicator">
                <div class="status-badge status-future">Future</div>
                <span>Long-term update planning</span>
            </div>
        </div>
    </div>

    <script>
        function switchTab(tabId) {
            // Hide all tab contents
            const contents = document.querySelectorAll('.tab-content');
            contents.forEach(content => content.classList.remove('active'));

            // Remove active class from all buttons
            const buttons = document.querySelectorAll('.tab-button');
            buttons.forEach(button => button.classList.remove('active'));

            // Show selected tab content
            document.getElementById(tabId).classList.add('active');

            // Add active class to clicked button
            event.target.classList.add('active');
        }
    </script>
</body>
</html>

```

```{r}
#| label: Inclusion and Exclusion Criteria 
#| eval: false 
#| echo: true 


## Inclusion and Exclusion Criteria {#criteria}

::: {.criteria-box}
### Inclusion Criteria

- **Type of Studies:** [Study designs included, e.g., "Randomized controlled trials", "Original research written in English"]
- **Intervention:** [Specific intervention criteria, e.g., "Intranasal oxytocin administration"]
- **Population:** [Target population, e.g., "Healthy adults aged 18-65"]
- **Outcomes:** [Primary and secondary outcomes, e.g., "Social behavior measures", "Validated scales for trust"]
- **Data Requirements:** [Statistical requirements, e.g., "Must report means and standard deviations or effect sizes"]
:::

::: {.criteria-box}
### Exclusion Criteria

- [Specific exclusion criteria relevant to the research question]
- [Additional exclusion criteria]
- [Overlap/duplicate publication handling]
:::

```

```{r}
#| label: Metholody summary of main content area 
#| eval: false 
#| echo: true 

## Methodology Summary {#methodology}

This living meta-analysis follows the PRISMA guidelines for systematic reviews. Our methodology is pre-registered and will incorporate [relevant previous research if applicable].

The quality of included studies will be assessed using [specific quality assessment tool, e.g., "Cochrane Risk of Bias tool for RCTs"]. Studies will be independently rated by two reviewers [describe rating categories and scoring system].

Statistical analyses will be conducted using [statistical software] with the [specific packages]. [Type of effects model] will be used with [specific estimator]. Heterogeneity will be evaluated by calculating [heterogeneity measures]. Publication bias will be assessed using [bias assessment methods].

```

```{r}
#| label: Search strategy area of main content area 
#| eval: false 
#| echo: true 


## Search Strategy {#search-strategy}

::: {.search-strategy-box}
<span class="search-db">EMBASE:</span>
'Pitocin®' OR 'Syntocinon®' OR 'synthetic oxytocin' AND 'labour/labor' OR 'birth' OR 'perinatal' OR 'prenatal' OR 'obstetric'

<span class="search-db">Web of Science:</span>
('Pitocin®' OR 'Syntocinon®' OR 'synthetic oxytocin' AND 'labour/labor' OR 'birth' OR 'perinatal' OR 'prenatal' OR 'obstetric') AND ('delivery' AND 'augment*' OR 'induc*')

<span class="search-db">MEDLINE:</span>
'Pitocin®' OR 'Syntocinon®' OR 'synthetic oxytocin' AND 'labour/labor' OR 'birth' OR 'perinatal' OR 'prenatal' OR 'obstetric' AND 'antepartum'
:::

```

## 6. Website maintenance

You find the correct scss classes for the different pages under the 3.1 File-by-file breakdown under each file explanation.
